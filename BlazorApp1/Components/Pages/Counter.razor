@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" 
@onclick="()=>currentCount++"
>
    Click me
</button>

<div class="m-4">
    <input type="text" @oninput="HandleInput" />
    <p>@text</p>
</div>

<div style="border: 1px solid black;" 
 @onmouseover="MouseOver"
>
    <p>@divText</p>
</div>

<div class="m-4">
    <input type="text" @onkeydown="HandleKeyDown" />
    <p>@text2</p>
</div>

<div class="m-4">
    <input type="text3" 
        @bind="text3" 
        @bind:event="oninput"
        @bind:after="Search" />
    <p>@text3</p>
    <p>@result</p>
</div>


@code {
    private int currentCount = 0;
    string text = "";
    string text2 = "";
    string text3 = "";
    string divText = "";
    string result = "";

    [Parameter]
    public int IncrementAmount { get; set; } = 1;

    private void IncrementCount()
    {
        currentCount+=IncrementAmount;
    }

    private void HandleInput(ChangeEventArgs e)
    {
        text = e.Value?.ToString() ?? "";
    }

    private void MouseOver(MouseEventArgs e)
    {
        divText = "Mouse Over Event Triggered";
    }

    private void HandleKeyDown(KeyboardEventArgs e)
    {
        text2 = $"Key Pressed: {e.Key}";
    }

    async Task Search()
    {
        await Task.Delay(500); // Simulate a delay for searching
        text3 = $"Search for: {text3}";
        result = text.Length > 5 ? "Found" : "Not Found";
    }
}
